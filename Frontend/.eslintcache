[{"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\index.tsx":"1","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\App.tsx":"3","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\Navbar\\Navbar.tsx":"4","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\Categories\\Categories.tsx":"5","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\Products\\Products.tsx":"6","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\assets\\img\\logo.tsx":"7","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\Cart\\Cart.tsx":"8","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\ProductDetails\\ProductDetails.tsx":"9","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\Checkout\\Checkout.tsx":"10","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\ExistingCustomer\\ExistingCustomer.tsx":"11","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\Admin\\Admin.tsx":"12","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\NewCustomerForm\\NewCustomerForm.tsx":"13","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\AdminOrder\\AdminOrder.tsx":"14","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\AdminProduct\\AdminProduct.tsx":"15","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\index.tsx":"16","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\reportWebVitals.ts":"17","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\App.tsx":"18","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\Navbar\\Navbar.tsx":"19","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\Cart\\Cart.tsx":"20","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\Categories\\Categories.tsx":"21","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\ProductDetails\\ProductDetails.tsx":"22","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\Admin\\Admin.tsx":"23","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\Products\\Products.tsx":"24","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\Checkout\\Checkout.tsx":"25","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\AdminOrder\\AdminOrder.tsx":"26","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\AdminProduct\\AdminProduct.tsx":"27","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\assets\\img\\logo.tsx":"28","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\ExistingCustomer\\ExistingCustomer.tsx":"29","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\NewCustomerForm\\NewCustomerForm.tsx":"30"},{"size":500,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":2337,"mtime":1613120662612,"results":"34","hashOfConfig":"32"},{"size":1441,"mtime":1620915818096,"results":"35","hashOfConfig":"32"},{"size":1147,"mtime":1612949013462,"results":"36","hashOfConfig":"32"},{"size":2185,"mtime":1612949324555,"results":"37","hashOfConfig":"32"},{"size":1328,"mtime":1611575735584,"results":"38","hashOfConfig":"32"},{"size":2092,"mtime":1612864369292,"results":"39","hashOfConfig":"32"},{"size":7076,"mtime":1612949288155,"results":"40","hashOfConfig":"32"},{"size":5461,"mtime":1612948972627,"results":"41","hashOfConfig":"32"},{"size":3319,"mtime":1612949056794,"results":"42","hashOfConfig":"32"},{"size":1220,"mtime":1613120941357,"results":"43","hashOfConfig":"32"},{"size":2853,"mtime":1612864528702,"results":"44","hashOfConfig":"32"},{"size":2990,"mtime":1613120342916,"results":"45","hashOfConfig":"32"},{"size":6626,"mtime":1613143092369,"results":"46","hashOfConfig":"32"},{"size":500,"mtime":499162500000,"results":"47","hashOfConfig":"48"},{"size":425,"mtime":499162500000,"results":"49","hashOfConfig":"48"},{"size":2337,"mtime":1613120662612,"results":"50","hashOfConfig":"48"},{"size":1441,"mtime":1620915818096,"results":"51","hashOfConfig":"48"},{"size":2092,"mtime":1612864369292,"results":"52","hashOfConfig":"48"},{"size":1147,"mtime":1612949013462,"results":"53","hashOfConfig":"48"},{"size":7076,"mtime":1612949288155,"results":"54","hashOfConfig":"48"},{"size":1220,"mtime":1613120941357,"results":"55","hashOfConfig":"48"},{"size":2185,"mtime":1612949324555,"results":"56","hashOfConfig":"48"},{"size":5461,"mtime":1612948972627,"results":"57","hashOfConfig":"48"},{"size":2990,"mtime":1613120342916,"results":"58","hashOfConfig":"48"},{"size":6626,"mtime":1613143092369,"results":"59","hashOfConfig":"48"},{"size":1328,"mtime":1611575735584,"results":"60","hashOfConfig":"48"},{"size":3319,"mtime":1612949056794,"results":"61","hashOfConfig":"48"},{"size":2853,"mtime":1612864528702,"results":"62","hashOfConfig":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"gw7yqv",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18m6blb",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\index.tsx",[],["131","132"],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\App.tsx",["133"],"import React, { useState } from 'react';\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Navbar from './components/Navbar/Navbar';\nimport Categories from './components/Categories/Categories';\nimport Products from './components/Products/Products';\nimport Cart from './components/Cart/Cart';\nimport ProductDetails from './components/ProductDetails/ProductDetails';\nimport { ICart } from './Models/ICart';\nimport Admin from './components/Admin/Admin';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport AdminProduct from './components/AdminProduct/AdminProduct';\n\nexport const apiUrl = \"https://localhost:5001/api\";\n\nfunction App() {\n library.add(fas);\n const defaultCart:ICart[] = [];\n const [productId, setProductId] = useState(0);\n const [userCart, setUserCart] = useState(defaultCart);\n\n function fetchProductId(id:number){\n  setProductId(id);\n }\n\n function addItemToCart(newItem:ICart){\n    let tempCart:ICart[] = userCart.map((item: ICart) => {\n      return item;\n    });\n\n    tempCart.forEach((item: ICart, i:number) => {\n      //Checks if product has same productID/colorID/formatID\n      if(item.productId === newItem.productId &&\n        item.colorId === newItem.colorId &&\n        item.formatId === newItem.formatId)\n      {\n        newItem.amount += tempCart[i].amount;\n        newItem.price = newItem.price * tempCart[i].amount;\n        tempCart.splice(i, 1);\n      }\n    });\n    setUserCart([...tempCart, newItem]);\n }\n\n  return (\n    <Router>\n      <header>\n        <Navbar updateCartCount={userCart.length}/>\n      </header>\n      <main>\n        <aside>\n          <Categories/>\n        </aside>\n        <Switch>\n          <Route path=\"/\" exact={true}>\n            <Products\n            sendIdToParent={fetchProductId}/>\n          </Route>\n          <Route path=\"/cart\">\n            <Cart Products={userCart}/>\n          </Route>\n          <Route path='/product/'>\n            <ProductDetails\n            productId={productId}\n            sendDetailsToParent={addItemToCart}/>\n          </Route>\n          <Route to=\"/admin\">\n            <Admin/>\n          </Route>\n          <Route path=\"*\">Does not exist</Route>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\Navbar\\Navbar.tsx",["134"],"import React, { useEffect, useState } from 'react'\r\nimport './Navbar.scss'\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Logo from '../../assets/img/logo'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface INavbarProps{\r\n    updateCartCount:number;\r\n}\r\n\r\nexport default function Navbar(props:INavbarProps) {\r\n    const [cartCount, setCartCount] = useState(0);\r\n    useEffect(() => {     \r\n        updateCount();\r\n    }, [props.updateCartCount])\r\n\r\n    function updateCount(){\r\n        setCartCount(props.updateCartCount);\r\n    }\r\n\r\n    return (\r\n            <nav>\r\n                <Link to='/'>\r\n                    <div id=\"logotype\">\r\n                        <Logo/>\r\n                        <span>Shiny Records</span>\r\n                    </div>\r\n                </Link>\r\n                <div>\r\n                    <input type=\"text\" name=\"\" id=\"\"/>\r\n                    <button>Sök</button>\r\n                </div>\r\n                <Link to='/cart' id=\"cart-button\">\r\n                    <span id=\"cart-icon\">\r\n                        <FontAwesomeIcon icon={faShoppingCart}></FontAwesomeIcon>\r\n                        {props.updateCartCount > 0 ? <span id=\"cart-counter\">{cartCount}</span>\r\n                        : <React.Fragment></React.Fragment>}\r\n                    </span>\r\n                </Link>\r\n            </nav>\r\n    )\r\n}\r\n","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\Categories\\Categories.tsx",["135"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { ICategory } from '../../Models/ICategory'\r\nimport './Categories.scss'\r\nimport { apiUrl } from '../../App';\r\n\r\nexport default function Categories() {\r\n    const defaultCategory:ICategory[] = [];\r\n    const [categoryList, setCategoryList] = useState(defaultCategory);\r\n\r\n    useEffect(() => {\r\n        getCategories();\r\n    }, []);\r\n\r\n    async function getCategories() {\r\n        try {\r\n            let result =\r\n            await axios.get<ICategory[]>(`${apiUrl}/genres/`);\r\n            let updateCategories:ICategory[] = result.data.map((category:ICategory) => {\r\n                return category;\r\n            });           \r\n           setCategoryList([...updateCategories]);       \r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    let categoriesHtml = categoryList.map((category:ICategory) => {\r\n        return(\r\n        <li key={category.id} data-category-id={category.id}>\r\n            <a href=\"#\">{category.genreName}</a>\r\n        </li>\r\n        );\r\n    })\r\n\r\n\r\n    return(<ul>\r\n        {categoriesHtml}\r\n    </ul>)\r\n}\r\n","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\Products\\Products.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\assets\\img\\logo.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\Cart\\Cart.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\ProductDetails\\ProductDetails.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\Checkout\\Checkout.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\ExistingCustomer\\ExistingCustomer.tsx",["136"],"import axios from 'axios';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { apiUrl } from '../../App';\r\nimport { ICustomer } from '../../Models/ICustomer';\r\nimport './ExistingCustomer.scss';\r\n\r\ninterface IExistionCustomerProps{\r\n    updateSelectedCustomer(customer:ICustomer):void;\r\n    sendPaymentMethod(paymentMethod: string):void;\r\n    proceedWithOrder():void;\r\n}\r\n\r\nexport default function ExistingCustomer(props: IExistionCustomerProps) {\r\n    const defaultCustomers:ICustomer[] = [];\r\n    const [customerList, setCustomerList] = useState(defaultCustomers);\r\n    const defaultSingleCustomer:ICustomer = {\r\n        id: 0,\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        adress: \"\",\r\n        zipCode: \"\",\r\n        city: \"\"\r\n    };\r\n\r\n    const [selectedCustomer, setSelectedCustomer] = useState(defaultSingleCustomer);\r\n\r\n    useEffect(() => {\r\n        getCustomers();    \r\n    }, []);\r\n\r\n\r\n    async function getCustomers(){\r\n        let result = \r\n        await axios.get<ICustomer[]>(`${apiUrl}/customer/`);\r\n        let updateCustomerList = result.data.map((customer: ICustomer) => {\r\n            return customer\r\n        });\r\n        setCustomerList([...updateCustomerList]);\r\n    }\r\n\r\n    function selectCustomer(e:React.SyntheticEvent <HTMLOptionElement> ){\r\n        let idToMatch = e.currentTarget.dataset.id;\r\n\r\n        customerList.forEach((customer:ICustomer) => {\r\n            if(customer.id === parseInt(idToMatch!)){\r\n                setSelectedCustomer(customer);\r\n                props.updateSelectedCustomer(customer);\r\n            }\r\n        });        \r\n    }\r\n\r\n    function getPaymentMethod(e:ChangeEvent <HTMLInputElement>){\r\n        let value = e.target.value;        \r\n        props.sendPaymentMethod(value);\r\n    }\r\n\r\n    function proceedToCheckoutFrom(){\r\n        props.proceedWithOrder();\r\n    }\r\n\r\n    let customerListHtml = customerList.map((customer: ICustomer) => {\r\n        return(\r\n            <option key={customer.id} onClick={selectCustomer} data-id={customer.id}>{customer.firstName} {customer.lastName}</option>\r\n        );\r\n    });\r\n\r\n\r\n    let customerSelectHtml =\r\n    <div id=\"existing-customer-container\">\r\n        <select name=\"customers\" id=\"\">\r\n            {customerListHtml}\r\n        </select>\r\n        <div className=\"payment-container\">\r\n            <label htmlFor=\"paymentMethod\">Betalsätt: </label>\r\n            <ul className=\"pay-method\">\r\n                <li>\r\n                    <input type=\"radio\" name=\"paymentMethod\" id=\"paypal\" value=\"paypal\" onChange={getPaymentMethod}/>\r\n                    <label htmlFor=\"paypal\">Paypal</label>\r\n                </li>\r\n                <li>\r\n                    <input type=\"radio\" name=\"paymentMethod\" id=\"visa\" value=\"visa\" onChange={getPaymentMethod}/>\r\n                    <label htmlFor=\"visa\">Visa</label>\r\n                </li>\r\n                <li>\r\n                    <input type=\"radio\" name=\"paymentMethod\" id=\"mastercard\" value=\"mastercard\" onChange={getPaymentMethod}/>\r\n                    <label htmlFor=\"mastercard\">Master card</label>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <button onClick={proceedToCheckoutFrom}>Nästa</button>\r\n    </div> \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {customerSelectHtml}\r\n        </div>\r\n    )\r\n}\r\n",["137","138"],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\Admin\\Admin.tsx",["139","140","141","142"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { IAdminOrder, IAdminOrderProducts } from '../../Models/IOrder';\r\nimport AdminOrder from '../AdminOrder/AdminOrder';\r\nimport AdminProduct from '../AdminProduct/AdminProduct';\r\nimport './Admin.scss'\r\n\r\nexport default function Admin() {\r\n    const [showAdminProduct, setShowAdminProduct] = useState(false);\r\n\r\n\r\n    \r\n    return (\r\n        <div id=\"admin-container\">\r\n            <div id=\"admin-nav\">\r\n                <Link to=\"/admin\">\r\n                    <button onClick={() => setShowAdminProduct(false)}>Orders List</button>\r\n                </Link>\r\n                <Link to=\"/admin/product\">\r\n                <button onClick={() => setShowAdminProduct(true)}>Add New Product</button>\r\n                </Link>\r\n            </div>\r\n            <Route to=\"/admin\">\r\n                {!showAdminProduct ? <AdminOrder></AdminOrder> : <React.Fragment></React.Fragment>}\r\n            </Route>\r\n            <Route to=\"/admin/product\">\r\n                {showAdminProduct ? <AdminProduct></AdminProduct> : <React.Fragment></React.Fragment>}\r\n            </Route>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\NewCustomerForm\\NewCustomerForm.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\AdminOrder\\AdminOrder.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\frontend\\src\\components\\AdminProduct\\AdminProduct.tsx",["143","144"],"import axios from 'axios';\r\nimport React, { ChangeEvent, MouseEvent, useEffect, useState } from 'react'\r\nimport { JsxEmit } from 'typescript';\r\nimport { apiUrl } from '../../App';\r\nimport { ICategory } from '../../Models/ICategory';\r\nimport { IColor } from '../../Models/IColor';\r\nimport { IFormat } from '../../Models/IFormat';\r\nimport { IProduct } from '../../Models/IProduct';\r\nimport { ITrackList } from '../../Models/ITrackList';\r\nimport './AdminProduct.scss'\r\n\r\nexport default function AdminProduct() {\r\n    const defaultProduct:IProduct = {\r\n        id:0,\r\n        artist:\"\",\r\n        album:\"\",\r\n        description:\"\",\r\n        color: [],\r\n        inStock:0,\r\n        price:0,\r\n        format:[],\r\n        releaseDate:\"\",\r\n        imgUrl:\"\",\r\n        spotifyLink:\"\",\r\n        trackList:[],\r\n        genre:[]\r\n    };\r\n    let defaultJSX:JSX.Element[] = [];\r\n    const defaultColorList:IColor[] = [];\r\n    const defaultFormatList:IFormat[] = [];\r\n    const defaultGenreList:ICategory[] = [];\r\n    const [productToAdd, setProductToAdd] = useState(defaultProduct);\r\n    const [colorList, setColorList] = useState(defaultColorList);\r\n    const [formatList, setFormatList] = useState(defaultFormatList);\r\n    const [genreList, setGenreList] = useState(defaultGenreList);\r\n    const [addNewTrackLine, setAddNewTrackLine] = useState(defaultJSX);\r\n\r\n    useEffect(() => {\r\n       getColors();\r\n       getFormats();\r\n       getGenre();\r\n    }, []);\r\n\r\n    async function getColors(){\r\n        let result = \r\n            await axios.get<IColor[]>(`${apiUrl}/color`);\r\n        let updateColorList = result.data.map((c:IColor) => {\r\n            return c;\r\n        });\r\n        setColorList(updateColorList);\r\n    }\r\n    async function getFormats(){\r\n        let result = \r\n            await axios.get<IFormat[]>(`${apiUrl}/format`);\r\n        let updateFormatList = result.data.map((c:IFormat) => {\r\n            return c;\r\n        });\r\n        setFormatList(updateFormatList);\r\n    }\r\n    async function getGenre(){\r\n        let result = \r\n            await axios.get<ICategory[]>(`${apiUrl}/genres`);\r\n        let updateGenreList = result.data.map((c:ICategory) => {\r\n            return c;\r\n        });\r\n        setGenreList(updateGenreList);\r\n    }\r\n\r\n    function updateNewProduct(e:ChangeEvent <HTMLInputElement>){\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        setProductToAdd({...productToAdd, [name]: value});\r\n    }\r\n\r\n    function showProduct(e:MouseEvent <HTMLButtonElement>){\r\n        e.preventDefault();\r\n        console.log(productToAdd);\r\n        \r\n    }\r\n\r\n    function generateNewLine(e:MouseEvent <HTMLButtonElement>){\r\n        e.preventDefault();\r\n        setAddNewTrackLine([...addNewTrackLine, tracklistHtml]);          \r\n    }\r\n    \r\n    let tracklistHtml = \r\n    <div className=\"track-input\">\r\n    <label htmlFor=\"trackNumber\">Låtnummer:</label>\r\n    <input type=\"number\" name=\"trackNumber\" id=\"trackNumber\"/>\r\n    <label htmlFor=\"songTitle\">Låtnamn:</label>\r\n    <input onChange={updateNewProduct} type=\"text\" name=\"songTitle\" id=\"songTitle\"/>\r\n    <button>Lägg till</button>\r\n    </div>;\r\n\r\n\r\n    let colorListHtml = colorList.map((c:IColor) => {\r\n        return(\r\n            <React.Fragment>\r\n                <div>\r\n                    <input key={c.id} type=\"checkbox\" name=\"color\" id=\"color\" value={c.id} />{c.name}\r\n                    <label htmlFor={c.name}></label>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    });\r\n\r\n    let formatListHtml = formatList.map((f:IFormat) => {\r\n        return(\r\n            <React.Fragment>\r\n                <div>\r\n                    <input key={f.id} type=\"checkbox\" name=\"format\" id=\"format\" value={f.id}/>\r\n                    <label htmlFor={f.name}>{f.name}</label>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    });\r\n\r\n    let genreListHtml = genreList.map((g:ICategory) => {\r\n        return(\r\n            <div>\r\n                <input key={g.id} type=\"checkbox\" name=\"genre\" id=\"genre\" value={g.id}/>\r\n                <label htmlFor={g.genreName}>{g.genreName}</label>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div id=\"admin-product-container\">\r\n            <form id=\"admin-product-form\">\r\n                <label htmlFor=\"artist\">Artist</label>\r\n                <input onChange={updateNewProduct} type=\"text\" name=\"artist\" id=\"artist\"/>\r\n                <label htmlFor=\"album\">Album</label>\r\n                <input onChange={updateNewProduct} type=\"text\" name=\"album\" id=\"album\"/>\r\n                <div id=\"admin-form-color\">\r\n                    <label htmlFor=\"color\">Färg på Skivan</label>\r\n                    <div id=\"color-container\">\r\n                        {colorListHtml}\r\n                    </div>\r\n                </div>\r\n                <div id=\"admin-form-format\">\r\n                    <label htmlFor=\"format\">Vilka format finns tillgängligt?</label>\r\n                    {formatListHtml}\r\n                </div>\r\n                <div id=\"admin-form-genre\">\r\n                    <label htmlFor=\"genre\">Vilka genrer ingår?</label>\r\n                    <div id=\"genre-container\">\r\n                        {genreListHtml}\r\n                    </div>\r\n                </div>\r\n                <label htmlFor=\"price\">Pris</label>\r\n                <input type=\"number\" name=\"price\" id=\"price\"/>\r\n                <label htmlFor=\"description\">Beskrivning</label>\r\n                <textarea name=\"description\" id=\"description\"\r\n                rows={5} cols={10} placeholder=\"Kort beskrivning av albumet\" maxLength={50}>\r\n                </textarea>\r\n                <div id=\"track-container\">\r\n                <button onClick={generateNewLine}>Ny låt</button>\r\n                    {tracklistHtml}\r\n                    {addNewTrackLine}\r\n                </div>\r\n                <label htmlFor=\"inStock\">Lager Status</label>\r\n                <input onChange={updateNewProduct} type=\"number\" name=\"inStock\" id=\"inStock\"/>\r\n                <label htmlFor=\"releaseDate\">Release dag</label>\r\n                <input onChange={updateNewProduct} type=\"date\" name=\"releaseDate\" id=\"releaseDate\"/>\r\n                <label htmlFor=\"imgUrl\">URL till Album Cover</label>\r\n                <input onChange={updateNewProduct} type=\"text\" name=\"imgUrl\" id=\"imgUrl\"/>\r\n                <label htmlFor=\"spotifyLink\">URL till Spotify</label>\r\n                <input onChange={updateNewProduct} type=\"text\" name=\"spotifyLink\" id=\"spotifyLink\"/>\r\n                <button onClick={showProduct}>Lägg till</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\index.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\App.tsx",["145"],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\Navbar\\Navbar.tsx",["146"],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\Cart\\Cart.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\Categories\\Categories.tsx",["147"],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\ProductDetails\\ProductDetails.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\Admin\\Admin.tsx",["148","149","150","151"],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\Products\\Products.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\Checkout\\Checkout.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\AdminOrder\\AdminOrder.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\AdminProduct\\AdminProduct.tsx",["152","153"],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\assets\\img\\logo.tsx",[],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\ExistingCustomer\\ExistingCustomer.tsx",["154"],"C:\\Users\\ShadowDK\\Documents\\Programming projects\\Backend\\Webshop\\Frontend\\src\\components\\NewCustomerForm\\NewCustomerForm.tsx",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":17,"column":8,"nodeType":"161","messageId":"162","endLine":17,"endColumn":20},{"ruleId":"163","severity":1,"message":"164","line":16,"column":8,"nodeType":"165","endLine":16,"endColumn":31,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":32,"column":13,"nodeType":"169","endLine":32,"endColumn":25},{"ruleId":"159","severity":1,"message":"170","line":25,"column":12,"nodeType":"161","messageId":"162","endLine":25,"endColumn":28},{"ruleId":"155","replacedBy":"171"},{"ruleId":"157","replacedBy":"172"},{"ruleId":"159","severity":1,"message":"173","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"174","line":2,"column":17,"nodeType":"161","messageId":"162","endLine":2,"endColumn":26},{"ruleId":"159","severity":1,"message":"175","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":21},{"ruleId":"159","severity":1,"message":"176","line":4,"column":23,"nodeType":"161","messageId":"162","endLine":4,"endColumn":42},{"ruleId":"159","severity":1,"message":"177","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":17},{"ruleId":"159","severity":1,"message":"178","line":9,"column":10,"nodeType":"161","messageId":"162","endLine":9,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":17,"column":8,"nodeType":"161","messageId":"162","endLine":17,"endColumn":20},{"ruleId":"163","severity":1,"message":"164","line":16,"column":8,"nodeType":"165","endLine":16,"endColumn":31,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"168","line":32,"column":13,"nodeType":"169","endLine":32,"endColumn":25},{"ruleId":"159","severity":1,"message":"173","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"174","line":2,"column":17,"nodeType":"161","messageId":"162","endLine":2,"endColumn":26},{"ruleId":"159","severity":1,"message":"175","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":21},{"ruleId":"159","severity":1,"message":"176","line":4,"column":23,"nodeType":"161","messageId":"162","endLine":4,"endColumn":42},{"ruleId":"159","severity":1,"message":"177","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":17},{"ruleId":"159","severity":1,"message":"178","line":9,"column":10,"nodeType":"161","messageId":"162","endLine":9,"endColumn":20},{"ruleId":"159","severity":1,"message":"170","line":25,"column":12,"nodeType":"161","messageId":"162","endLine":25,"endColumn":28},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"@typescript-eslint/no-unused-vars","'AdminProduct' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateCount'. Either include it or remove the dependency array.","ArrayExpression",["182"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'selectedCustomer' is assigned a value but never used.",["180"],["181"],"'axios' is defined but never used.","'useEffect' is defined but never used.","'IAdminOrder' is defined but never used.","'IAdminOrderProducts' is defined but never used.","'JsxEmit' is defined but never used.","'ITrackList' is defined but never used.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},"Update the dependencies array to be: [props.updateCartCount, updateCount]",{"range":"187","text":"188"},{"range":"189","text":"188"},[519,542],"[props.updateCartCount, updateCount]",[519,542]]